#!/usr/bin/python
# coding:utf-8
import os
import urllib2
import re
import math
import random
import time


class ImageUtile:
    def __init__(self, title=None, url=None, savePath=None, headers={}, nextPageSymbal=None, charset='gb2312'):
        self.title = title
        self.url = url
        self.savePath = os.path.join(savePath, title)
        self.headers = headers
        self.nextPage = None
        self.nextPageSymbal = nextPageSymbal
        self.charset = charset
        self.imageList = []
        self.flag = False

        if not os.path.exists(self.savePath):
            os.mkdir(self.savePath)

    def getImageList(self, url=None, imageType=['jpg']):
        request = urllib2.Request(url, headers=self.headers)
        try_num = 3
        while try_num > 0:
            try:
                html = urllib2.urlopen(request)
                break
            except Exception, e:
                print e.message
                try_num -= 1
                continue
        try:
            source = html.readlines()
            for image_line in source:
                if ('<img' in image_line) and ('src=' in image_line) and ('class' not in image_line):
                    for type in imageType:
                        pattern = re.search(r'src="(.*' + type + ')"', image_line)
                        if pattern:
                            pattern = pattern.groups()[0]
                            print pattern
                            self.imageList.append(pattern)
                            self.saveImage(self.savePath, [pattern])

                if 'next-page' in image_line:
                    self.flag = True
                    next_url = self.getNextPage(str_line=image_line)
                    while self.flag:
                        self.getImageList(next_url)
        except Exception, e:
            print e.message
            print "Read the html error!"
        finally:
            html.close()
            self.flag = False

        return self.imageList

    def saveImage(self, path=None, imageList=[]):
        time.sleep(1)
        try:
            for url in imageList:
                path = os.path.join(path, str(url).split(r'-')[-1])
                request = urllib2.Request(url, headers=self.headers)
                response = urllib2.urlopen(request)
                content = response.read()
                with open(path, 'wb') as fp:
                    fp.write(content)
        except Exception, e:
            print e.message

    def getNextPage(self, str_line=''):
        # time.sleep(1)
        if self.nextPageSymbal.decode('utf8').encode(self.charset) in str_line:
            str_line = str_line.split('next-page')[-1]
            compile = re.compile(r"(\w+.html)+")
            pattern = compile.search(str_line)
            if pattern:
                self.nextPage = pattern.groups()[0]
        url = re.sub(r"\w+.html", self.nextPage, self.url)
        return url

    def start(self):
        self.getImageList(self.url)
        print "There is %s images in the page." % len(self.imageList)
        # self.saveImage(self.savePath, self.imageList)


if __name__ == '__main__':
    headers = {'Referer': 'http://yxpjw.club/luyilu/2016/0703/2146.html'}
    headers[
        'UserAgent'] = 'Mozilla/5.0  AppleWebKit/537.36  Chrome/48.0.2564.23 Mobile Safari/537.36'

    image_util = ImageUtile(
        title='lilisha',
        url='http://yxpjw.club/luyilu/2016/0703/2146.html',
        savePath='D:\\yanjiali',
        headers={'Referer': 'http://yxpjw.club/luyilu/2016/0703/2146.html'},
        nextPageSymbal='下一页',
        charset='gb2312'
    )

    image_util.start()
